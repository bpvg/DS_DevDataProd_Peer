YAOOP!
========================================================
_Yet Another Online Options Pricer_  

<br><br><br><br><br><br>
_author:_ bpvg  
_date:_ `r Sys.Date()`  
<br>
<small>_alpha site:_ http://bpvg.shinyapps.io/YAOOP</small>  


The YAOOP! project 
========================================================
<br>
**Our vision:** 
_Finance shall be easy._  

**Our mission:**
_Provide a simple and intuitive, yet powerful, European Options Pricer._  

<br>
**Why _YAOOP!_?**  
- Simple and intuitive to use.
- Well documented and with lots of learning resources.
- Powerful graphical what-if analysis.
- Multiplatform.


Our Site
========================================================
You can find us at:  
http://bpvg.shinyapps.io/YAOOP

![YAOOP Platforms] (Platforms.gif)

<br><br><small>
The source code for the site and for this presentation is on [GitHub] (https://github.com/bpvg/DS_DevDataProd_Peer).  
</small>

***
<br><br><br>
## YAOOP! is with you...
<br>
## ...wherever you are!


Maths behind the site
========================================================
<small>We use an enhanced Black-Scholes formula, able to deal with continuous dividend payment.  </small>  

```{r PricingDemo, echo=TRUE}
source("server.R")
Calculator(20, 18, "2014-12-19", 0.25, 0.005, 0)

```

Graphical what-if analysis
========================================================

Powerful graphical analysis.

```{r ChartDemo1, echo=FALSE}
library(ggplot2)
data <- Charter("Spot", "premium", "Call", 20, 18, "2015-12-18", 0.25, 0.005, 0)
p <- ggplot(data, aes(x=X, y=Y)) + geom_line(col="#802c59", size=2)
p <- p + xlab("Spot") + ylab("premium") + theme_bw()
print(p)
```

***
```{r ChartDemo2, echo=FALSE}
data <- Charter("Strike", "delta", "Put", 20, 18, "2015-12-18", 0.25, 0.005, 0)
p <- ggplot(data, aes(x=X, y=Y)) + geom_line(col="#802c59", size=2)
p <- p + xlab("Strike") + ylab("delta") + theme_bw()
print(p)
```
You can simulate the behavior of an output when an input changes. 
 